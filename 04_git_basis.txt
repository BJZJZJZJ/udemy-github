1. git vs github
    - git : 로컬에서 관리되는 버전 관리 Tool
    - github : 클라우드 환경에서 관리되는 버전 관리 tool


2. git 기초
    - 워킹 디렉토리 : 작업공간
    - 리포지터리 
        - 모든 파일과 폴더의 변경사항을 추적
        - 추적은 commit 과 branch 를 기점으로 함
        - branch : 커밋이 저장된 곳

    - 깃 명령어 정리 
        git init 
           리포지토리 생성 및 master branch 생성

        git status 
            현재 리포지토리의 상태 확인. (branch, 추적중인 파일 등등)
        
        git add {파일명}
            git으로 추적하고자 하는 파일 / 폴더 등록
            [staging 영역으로 등록]
        
        git commit -m {커밋 메시지}
            * 만일 유저명 / 이메일을 초기화 하지 않았다면  
                git config --global --edit 를 이용해 등록
            
        git log
            master branch 에 있는 커밋들의 개요를 확인 할 수 있음

        git branch
            현재 리포지토리에 정의된 branch를 확인

            -m [이름] : 마스터 branch 이름 변경 
			-D [이름] : 브런치를 삭제
			
        git checkout -b [이름]
            master branch를 기준으로 새로운 branch 생성
            -b : 생성 후 이동

        git merge [브런치명]
		
		git rm [파일명] 
			- 스테이징 상태에 있는 파일을 지우고 실제로 제거함
		
		git reset --hard HEAD~1
			HEAD (최상위 commit 상태)를 (~1) 1단계 초기화
			--hard 옵션 
			
		git checkout -- .
			현재 branch의 마지막 commit 상태로 초기화
			
		git reset [파일명]
			스테이징 된 파일을 언스테이징 상태로 복원
		